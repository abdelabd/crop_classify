// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module crop_array_array_ap_uint_12_array_ap_fixed_10_2_5_3_0_1u_config3_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        image_V_data_V_TDATA,
        image_V_data_V_TVALID,
        image_V_data_V_TREADY,
        crop_coordinates_normed_V_data_0_V_TDATA,
        crop_coordinates_normed_V_data_0_V_TVALID,
        crop_coordinates_normed_V_data_0_V_TREADY,
        crop_coordinates_normed_V_data_1_V_TDATA,
        crop_coordinates_normed_V_data_1_V_TVALID,
        crop_coordinates_normed_V_data_1_V_TREADY,
        crop_coordinates_normed_V_data_2_V_TDATA,
        crop_coordinates_normed_V_data_2_V_TVALID,
        crop_coordinates_normed_V_data_2_V_TREADY,
        crop_coordinates_normed_V_data_3_V_TDATA,
        crop_coordinates_normed_V_data_3_V_TVALID,
        crop_coordinates_normed_V_data_3_V_TREADY,
        cropped_images_V_data_V_TDATA,
        cropped_images_V_data_V_TVALID,
        cropped_images_V_data_V_TREADY
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] image_V_data_V_TDATA;
input   image_V_data_V_TVALID;
output   image_V_data_V_TREADY;
input  [15:0] crop_coordinates_normed_V_data_0_V_TDATA;
input   crop_coordinates_normed_V_data_0_V_TVALID;
output   crop_coordinates_normed_V_data_0_V_TREADY;
input  [15:0] crop_coordinates_normed_V_data_1_V_TDATA;
input   crop_coordinates_normed_V_data_1_V_TVALID;
output   crop_coordinates_normed_V_data_1_V_TREADY;
input  [15:0] crop_coordinates_normed_V_data_2_V_TDATA;
input   crop_coordinates_normed_V_data_2_V_TVALID;
output   crop_coordinates_normed_V_data_2_V_TREADY;
input  [15:0] crop_coordinates_normed_V_data_3_V_TDATA;
input   crop_coordinates_normed_V_data_3_V_TVALID;
output   crop_coordinates_normed_V_data_3_V_TREADY;
output  [15:0] cropped_images_V_data_V_TDATA;
output   cropped_images_V_data_V_TVALID;
input   cropped_images_V_data_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] image_V_data_V_0_data_out;
wire    image_V_data_V_0_vld_in;
wire    image_V_data_V_0_vld_out;
wire    image_V_data_V_0_ack_in;
reg    image_V_data_V_0_ack_out;
reg   [15:0] image_V_data_V_0_payload_A;
reg   [15:0] image_V_data_V_0_payload_B;
reg    image_V_data_V_0_sel_rd;
reg    image_V_data_V_0_sel_wr;
wire    image_V_data_V_0_sel;
wire    image_V_data_V_0_load_A;
wire    image_V_data_V_0_load_B;
reg   [1:0] image_V_data_V_0_state;
wire    image_V_data_V_0_state_cmp_full;
reg   [15:0] crop_coordinates_normed_V_data_0_V_0_data_out;
wire    crop_coordinates_normed_V_data_0_V_0_vld_in;
wire    crop_coordinates_normed_V_data_0_V_0_vld_out;
wire    crop_coordinates_normed_V_data_0_V_0_ack_in;
reg    crop_coordinates_normed_V_data_0_V_0_ack_out;
reg   [15:0] crop_coordinates_normed_V_data_0_V_0_payload_A;
reg   [15:0] crop_coordinates_normed_V_data_0_V_0_payload_B;
reg    crop_coordinates_normed_V_data_0_V_0_sel_rd;
reg    crop_coordinates_normed_V_data_0_V_0_sel_wr;
wire    crop_coordinates_normed_V_data_0_V_0_sel;
wire    crop_coordinates_normed_V_data_0_V_0_load_A;
wire    crop_coordinates_normed_V_data_0_V_0_load_B;
reg   [1:0] crop_coordinates_normed_V_data_0_V_0_state;
wire    crop_coordinates_normed_V_data_0_V_0_state_cmp_full;
reg   [15:0] crop_coordinates_normed_V_data_1_V_0_data_out;
wire    crop_coordinates_normed_V_data_1_V_0_vld_in;
wire    crop_coordinates_normed_V_data_1_V_0_vld_out;
wire    crop_coordinates_normed_V_data_1_V_0_ack_in;
reg    crop_coordinates_normed_V_data_1_V_0_ack_out;
reg   [15:0] crop_coordinates_normed_V_data_1_V_0_payload_A;
reg   [15:0] crop_coordinates_normed_V_data_1_V_0_payload_B;
reg    crop_coordinates_normed_V_data_1_V_0_sel_rd;
reg    crop_coordinates_normed_V_data_1_V_0_sel_wr;
wire    crop_coordinates_normed_V_data_1_V_0_sel;
wire    crop_coordinates_normed_V_data_1_V_0_load_A;
wire    crop_coordinates_normed_V_data_1_V_0_load_B;
reg   [1:0] crop_coordinates_normed_V_data_1_V_0_state;
wire    crop_coordinates_normed_V_data_1_V_0_state_cmp_full;
reg   [15:0] crop_coordinates_normed_V_data_2_V_0_data_out;
wire    crop_coordinates_normed_V_data_2_V_0_vld_in;
wire    crop_coordinates_normed_V_data_2_V_0_vld_out;
wire    crop_coordinates_normed_V_data_2_V_0_ack_in;
reg    crop_coordinates_normed_V_data_2_V_0_ack_out;
reg   [15:0] crop_coordinates_normed_V_data_2_V_0_payload_A;
reg   [15:0] crop_coordinates_normed_V_data_2_V_0_payload_B;
reg    crop_coordinates_normed_V_data_2_V_0_sel_rd;
reg    crop_coordinates_normed_V_data_2_V_0_sel_wr;
wire    crop_coordinates_normed_V_data_2_V_0_sel;
wire    crop_coordinates_normed_V_data_2_V_0_load_A;
wire    crop_coordinates_normed_V_data_2_V_0_load_B;
reg   [1:0] crop_coordinates_normed_V_data_2_V_0_state;
wire    crop_coordinates_normed_V_data_2_V_0_state_cmp_full;
reg   [15:0] crop_coordinates_normed_V_data_3_V_0_data_out;
wire    crop_coordinates_normed_V_data_3_V_0_vld_in;
wire    crop_coordinates_normed_V_data_3_V_0_vld_out;
wire    crop_coordinates_normed_V_data_3_V_0_ack_in;
reg    crop_coordinates_normed_V_data_3_V_0_ack_out;
reg   [15:0] crop_coordinates_normed_V_data_3_V_0_payload_A;
reg   [15:0] crop_coordinates_normed_V_data_3_V_0_payload_B;
reg    crop_coordinates_normed_V_data_3_V_0_sel_rd;
reg    crop_coordinates_normed_V_data_3_V_0_sel_wr;
wire    crop_coordinates_normed_V_data_3_V_0_sel;
wire    crop_coordinates_normed_V_data_3_V_0_load_A;
wire    crop_coordinates_normed_V_data_3_V_0_load_B;
reg   [1:0] crop_coordinates_normed_V_data_3_V_0_state;
wire    crop_coordinates_normed_V_data_3_V_0_state_cmp_full;
reg   [15:0] cropped_images_V_data_V_1_data_out;
reg    cropped_images_V_data_V_1_vld_in;
wire    cropped_images_V_data_V_1_vld_out;
wire    cropped_images_V_data_V_1_ack_in;
wire    cropped_images_V_data_V_1_ack_out;
reg   [15:0] cropped_images_V_data_V_1_payload_A;
reg   [15:0] cropped_images_V_data_V_1_payload_B;
reg    cropped_images_V_data_V_1_sel_rd;
reg    cropped_images_V_data_V_1_sel_wr;
wire    cropped_images_V_data_V_1_sel;
wire    cropped_images_V_data_V_1_load_A;
wire    cropped_images_V_data_V_1_load_B;
reg   [1:0] cropped_images_V_data_V_1_state;
wire    cropped_images_V_data_V_1_state_cmp_full;
reg    image_V_data_V_TDATA_blk_n;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln887_1_fu_813_p2;
reg    crop_coordinates_normed_V_data_0_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln46_fu_413_p2;
reg    crop_coordinates_normed_V_data_1_V_TDATA_blk_n;
reg    crop_coordinates_normed_V_data_2_V_TDATA_blk_n;
reg    crop_coordinates_normed_V_data_3_V_TDATA_blk_n;
reg    cropped_images_V_data_V_TDATA_blk_n;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln90_fu_911_p2;
wire    ap_CS_fsm_state8;
wire   [1:0] box_idx_fu_419_p2;
wire    io_acc_block_signal_op31;
reg    ap_block_state2;
wire   [9:0] crop_coordinates_local_0_V_q0;
reg   [9:0] crop_coordinates_local_0_V_load_reg_988;
wire    ap_CS_fsm_state3;
wire   [9:0] crop_coordinates_local_1_V_q0;
reg   [9:0] crop_coordinates_local_1_V_load_reg_993;
wire   [9:0] crop_coordinates_local_2_V_q0;
reg   [9:0] crop_coordinates_local_2_V_load_reg_998;
wire   [9:0] crop_coordinates_local_3_V_q0;
reg   [9:0] crop_coordinates_local_3_V_load_reg_1003;
wire   [9:0] crop_coordinates_local_0_V_q1;
reg   [9:0] crop_coordinates_local_0_V_load_1_reg_1008;
wire   [9:0] crop_coordinates_local_1_V_q1;
reg   [9:0] crop_coordinates_local_1_V_load_1_reg_1013;
wire   [9:0] crop_coordinates_local_2_V_q1;
reg   [9:0] crop_coordinates_local_2_V_load_1_reg_1018;
wire   [9:0] crop_coordinates_local_3_V_q1;
reg   [9:0] crop_coordinates_local_3_V_load_1_reg_1023;
wire   [5:0] src_row_V_fu_771_p2;
reg   [5:0] src_row_V_reg_1031;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln79_fu_777_p2;
reg   [0:0] icmp_ln79_reg_1036;
wire   [0:0] icmp_ln887_fu_765_p2;
wire   [0:0] xor_ln79_2_fu_787_p2;
reg   [0:0] xor_ln79_2_reg_1041;
wire   [0:0] icmp_ln79_2_fu_793_p2;
reg   [0:0] icmp_ln79_2_reg_1046;
wire   [0:0] xor_ln79_3_fu_803_p2;
reg   [0:0] xor_ln79_3_reg_1051;
wire   [6:0] src_col_V_fu_819_p2;
wire    cropped_images_stream_0_V_data_0_V_full_n;
reg    cropped_images_stream_0_V_data_0_V_write;
wire   [0:0] and_ln79_fu_857_p2;
reg    ap_predicate_op155_write_state5;
wire    cropped_images_stream_1_V_data_0_V_full_n;
reg    cropped_images_stream_1_V_data_0_V_write;
wire   [0:0] and_ln79_1_fu_889_p2;
reg    ap_predicate_op164_write_state5;
reg    ap_block_state5;
wire   [1:0] box_idx_1_fu_901_p2;
reg   [1:0] box_idx_1_reg_1073;
wire    ap_CS_fsm_state6;
reg    ap_block_state6;
wire   [0:0] trunc_ln134_fu_907_p1;
reg   [0:0] trunc_ln134_reg_1078;
wire   [0:0] icmp_ln89_fu_895_p2;
wire   [8:0] i_fu_917_p2;
reg   [8:0] i_reg_1085;
wire   [9:0] cropped_images_stream_0_V_data_0_V_dout;
wire    cropped_images_stream_0_V_data_0_V_empty_n;
reg    cropped_images_stream_0_V_data_0_V_read;
reg    ap_predicate_op184_read_state7;
wire   [9:0] cropped_images_stream_1_V_data_0_V_dout;
wire    cropped_images_stream_1_V_data_0_V_empty_n;
reg    cropped_images_stream_1_V_data_0_V_read;
reg    ap_predicate_op186_read_state7;
reg    ap_block_state7;
reg    ap_block_state7_io;
wire   [15:0] zext_ln163_fu_923_p1;
reg   [0:0] crop_coordinates_local_0_V_address0;
reg    crop_coordinates_local_0_V_ce0;
reg    crop_coordinates_local_0_V_we0;
wire   [9:0] crop_coordinates_local_0_V_d0;
wire   [0:0] crop_coordinates_local_0_V_address1;
reg    crop_coordinates_local_0_V_ce1;
reg   [0:0] crop_coordinates_local_1_V_address0;
reg    crop_coordinates_local_1_V_ce0;
reg    crop_coordinates_local_1_V_we0;
wire   [9:0] crop_coordinates_local_1_V_d0;
wire   [0:0] crop_coordinates_local_1_V_address1;
reg    crop_coordinates_local_1_V_ce1;
reg   [0:0] crop_coordinates_local_2_V_address0;
reg    crop_coordinates_local_2_V_ce0;
reg    crop_coordinates_local_2_V_we0;
wire   [9:0] crop_coordinates_local_2_V_d0;
wire   [0:0] crop_coordinates_local_2_V_address1;
reg    crop_coordinates_local_2_V_ce1;
reg   [0:0] crop_coordinates_local_3_V_address0;
reg    crop_coordinates_local_3_V_ce0;
reg    crop_coordinates_local_3_V_we0;
wire   [9:0] crop_coordinates_local_3_V_d0;
wire   [0:0] crop_coordinates_local_3_V_address1;
reg    crop_coordinates_local_3_V_ce1;
reg   [1:0] box_idx_0_reg_347;
reg    ap_block_state1;
reg   [5:0] t_V_reg_358;
reg   [6:0] t_V_1_reg_369;
reg   [1:0] box_idx7_0_reg_380;
reg   [8:0] i_0_reg_391;
reg   [9:0] ap_phi_mux_tmp_data_0_V_4_phi_fu_405_p4;
wire   [63:0] zext_ln48_fu_449_p1;
wire   [9:0] tmp_data_0_V_1_fu_825_p1;
wire   [9:0] tmp_data_0_V_fu_445_p1;
wire  signed [9:0] r_V_fu_461_p1;
wire   [16:0] r_V_fu_461_p2;
wire   [8:0] tmp_2_fu_467_p4;
wire   [7:0] trunc_ln851_fu_489_p1;
wire  signed [9:0] sext_ln835_fu_477_p1;
wire   [0:0] icmp_ln851_fu_493_p2;
wire   [9:0] ret_V_fu_499_p2;
wire   [0:0] p_Result_s_fu_481_p3;
wire   [9:0] select_ln851_fu_505_p3;
wire   [15:0] shl_ln1118_fu_526_p2;
wire   [9:0] trunc_ln1118_fu_522_p1;
wire   [13:0] shl_ln1118_1_fu_536_p3;
wire  signed [16:0] sext_ln1118_1_fu_544_p1;
wire  signed [16:0] sext_ln1118_fu_532_p1;
wire   [16:0] r_V_1_fu_548_p2;
wire   [8:0] tmp_3_fu_554_p4;
wire   [7:0] trunc_ln851_1_fu_576_p1;
wire  signed [9:0] sext_ln835_1_fu_564_p1;
wire   [0:0] icmp_ln851_1_fu_580_p2;
wire   [9:0] ret_V_1_fu_586_p2;
wire   [0:0] p_Result_1_fu_568_p3;
wire   [9:0] select_ln851_1_fu_592_p3;
wire   [9:0] tmp_data_2_V_fu_441_p1;
wire  signed [9:0] r_V_2_fu_613_p1;
wire   [16:0] r_V_2_fu_613_p2;
wire   [8:0] tmp_4_fu_619_p4;
wire   [7:0] trunc_ln851_2_fu_641_p1;
wire  signed [9:0] sext_ln835_2_fu_629_p1;
wire   [0:0] icmp_ln851_2_fu_645_p2;
wire   [9:0] ret_V_2_fu_651_p2;
wire   [0:0] p_Result_2_fu_633_p3;
wire   [9:0] select_ln851_2_fu_657_p3;
wire   [15:0] shl_ln1118_2_fu_678_p2;
wire   [9:0] trunc_ln1118_1_fu_674_p1;
wire   [13:0] shl_ln1118_3_fu_688_p3;
wire  signed [16:0] sext_ln1118_3_fu_696_p1;
wire  signed [16:0] sext_ln1118_2_fu_684_p1;
wire   [16:0] r_V_3_fu_700_p2;
wire   [8:0] tmp_5_fu_706_p4;
wire   [7:0] trunc_ln851_3_fu_728_p1;
wire  signed [9:0] sext_ln835_3_fu_716_p1;
wire   [0:0] icmp_ln851_3_fu_732_p2;
wire   [9:0] ret_V_3_fu_738_p2;
wire   [0:0] p_Result_3_fu_720_p3;
wire   [9:0] select_ln851_3_fu_744_p3;
wire   [9:0] zext_ln887_fu_761_p1;
wire   [0:0] icmp_ln79_1_fu_782_p2;
wire   [0:0] icmp_ln79_3_fu_798_p2;
wire   [9:0] zext_ln887_1_fu_809_p1;
wire   [0:0] icmp_ln891_fu_831_p2;
wire   [0:0] or_ln79_fu_836_p2;
wire   [0:0] or_ln79_1_fu_841_p2;
wire   [0:0] icmp_ln887_2_fu_852_p2;
wire   [0:0] xor_ln79_fu_846_p2;
wire   [0:0] icmp_ln891_1_fu_863_p2;
wire   [0:0] or_ln79_2_fu_868_p2;
wire   [0:0] or_ln79_3_fu_873_p2;
wire   [0:0] icmp_ln887_3_fu_884_p2;
wire   [0:0] xor_ln79_1_fu_878_p2;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 image_V_data_V_0_sel_rd = 1'b0;
#0 image_V_data_V_0_sel_wr = 1'b0;
#0 image_V_data_V_0_state = 2'd0;
#0 crop_coordinates_normed_V_data_0_V_0_sel_rd = 1'b0;
#0 crop_coordinates_normed_V_data_0_V_0_sel_wr = 1'b0;
#0 crop_coordinates_normed_V_data_0_V_0_state = 2'd0;
#0 crop_coordinates_normed_V_data_1_V_0_sel_rd = 1'b0;
#0 crop_coordinates_normed_V_data_1_V_0_sel_wr = 1'b0;
#0 crop_coordinates_normed_V_data_1_V_0_state = 2'd0;
#0 crop_coordinates_normed_V_data_2_V_0_sel_rd = 1'b0;
#0 crop_coordinates_normed_V_data_2_V_0_sel_wr = 1'b0;
#0 crop_coordinates_normed_V_data_2_V_0_state = 2'd0;
#0 crop_coordinates_normed_V_data_3_V_0_sel_rd = 1'b0;
#0 crop_coordinates_normed_V_data_3_V_0_sel_wr = 1'b0;
#0 crop_coordinates_normed_V_data_3_V_0_state = 2'd0;
#0 cropped_images_V_data_V_1_sel_rd = 1'b0;
#0 cropped_images_V_data_V_1_sel_wr = 1'b0;
#0 cropped_images_V_data_V_1_state = 2'd0;
end

crop_array_array_ap_uint_12_array_ap_fixed_10_2_5_3_0_1u_config3_s_crop_coordbkb #(
    .DataWidth( 10 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
crop_coordinates_local_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(crop_coordinates_local_0_V_address0),
    .ce0(crop_coordinates_local_0_V_ce0),
    .we0(crop_coordinates_local_0_V_we0),
    .d0(crop_coordinates_local_0_V_d0),
    .q0(crop_coordinates_local_0_V_q0),
    .address1(crop_coordinates_local_0_V_address1),
    .ce1(crop_coordinates_local_0_V_ce1),
    .q1(crop_coordinates_local_0_V_q1)
);

crop_array_array_ap_uint_12_array_ap_fixed_10_2_5_3_0_1u_config3_s_crop_coordbkb #(
    .DataWidth( 10 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
crop_coordinates_local_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(crop_coordinates_local_1_V_address0),
    .ce0(crop_coordinates_local_1_V_ce0),
    .we0(crop_coordinates_local_1_V_we0),
    .d0(crop_coordinates_local_1_V_d0),
    .q0(crop_coordinates_local_1_V_q0),
    .address1(crop_coordinates_local_1_V_address1),
    .ce1(crop_coordinates_local_1_V_ce1),
    .q1(crop_coordinates_local_1_V_q1)
);

crop_array_array_ap_uint_12_array_ap_fixed_10_2_5_3_0_1u_config3_s_crop_coordbkb #(
    .DataWidth( 10 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
crop_coordinates_local_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(crop_coordinates_local_2_V_address0),
    .ce0(crop_coordinates_local_2_V_ce0),
    .we0(crop_coordinates_local_2_V_we0),
    .d0(crop_coordinates_local_2_V_d0),
    .q0(crop_coordinates_local_2_V_q0),
    .address1(crop_coordinates_local_2_V_address1),
    .ce1(crop_coordinates_local_2_V_ce1),
    .q1(crop_coordinates_local_2_V_q1)
);

crop_array_array_ap_uint_12_array_ap_fixed_10_2_5_3_0_1u_config3_s_crop_coordbkb #(
    .DataWidth( 10 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
crop_coordinates_local_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(crop_coordinates_local_3_V_address0),
    .ce0(crop_coordinates_local_3_V_ce0),
    .we0(crop_coordinates_local_3_V_we0),
    .d0(crop_coordinates_local_3_V_d0),
    .q0(crop_coordinates_local_3_V_q0),
    .address1(crop_coordinates_local_3_V_address1),
    .ce1(crop_coordinates_local_3_V_ce1),
    .q1(crop_coordinates_local_3_V_q1)
);

fifo_w10_d400_A cropped_images_stream_0_V_data_0_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tmp_data_0_V_1_fu_825_p1),
    .if_full_n(cropped_images_stream_0_V_data_0_V_full_n),
    .if_write(cropped_images_stream_0_V_data_0_V_write),
    .if_dout(cropped_images_stream_0_V_data_0_V_dout),
    .if_empty_n(cropped_images_stream_0_V_data_0_V_empty_n),
    .if_read(cropped_images_stream_0_V_data_0_V_read)
);

fifo_w10_d400_A cropped_images_stream_1_V_data_0_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tmp_data_0_V_1_fu_825_p1),
    .if_full_n(cropped_images_stream_1_V_data_0_V_full_n),
    .if_write(cropped_images_stream_1_V_data_0_V_write),
    .if_dout(cropped_images_stream_1_V_data_0_V_dout),
    .if_empty_n(cropped_images_stream_1_V_data_0_V_empty_n),
    .if_read(cropped_images_stream_1_V_data_0_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((cropped_images_V_data_V_1_state == 2'd1) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_TREADY == 1'b0))) & (icmp_ln89_fu_895_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_0_V_0_sel_rd <= 1'b0;
    end else begin
        if (((crop_coordinates_normed_V_data_0_V_0_ack_out == 1'b1) & (crop_coordinates_normed_V_data_0_V_0_vld_out == 1'b1))) begin
            crop_coordinates_normed_V_data_0_V_0_sel_rd <= ~crop_coordinates_normed_V_data_0_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_0_V_0_sel_wr <= 1'b0;
    end else begin
        if (((crop_coordinates_normed_V_data_0_V_0_ack_in == 1'b1) & (crop_coordinates_normed_V_data_0_V_0_vld_in == 1'b1))) begin
            crop_coordinates_normed_V_data_0_V_0_sel_wr <= ~crop_coordinates_normed_V_data_0_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_0_V_0_state <= 2'd0;
    end else begin
        if ((((crop_coordinates_normed_V_data_0_V_0_state == 2'd2) & (crop_coordinates_normed_V_data_0_V_0_vld_in == 1'b0)) | ((crop_coordinates_normed_V_data_0_V_0_state == 2'd3) & (crop_coordinates_normed_V_data_0_V_0_vld_in == 1'b0) & (crop_coordinates_normed_V_data_0_V_0_ack_out == 1'b1)))) begin
            crop_coordinates_normed_V_data_0_V_0_state <= 2'd2;
        end else if ((((crop_coordinates_normed_V_data_0_V_0_state == 2'd1) & (crop_coordinates_normed_V_data_0_V_0_ack_out == 1'b0)) | ((crop_coordinates_normed_V_data_0_V_0_state == 2'd3) & (crop_coordinates_normed_V_data_0_V_0_ack_out == 1'b0) & (crop_coordinates_normed_V_data_0_V_0_vld_in == 1'b1)))) begin
            crop_coordinates_normed_V_data_0_V_0_state <= 2'd1;
        end else if (((~((crop_coordinates_normed_V_data_0_V_0_vld_in == 1'b0) & (crop_coordinates_normed_V_data_0_V_0_ack_out == 1'b1)) & ~((crop_coordinates_normed_V_data_0_V_0_ack_out == 1'b0) & (crop_coordinates_normed_V_data_0_V_0_vld_in == 1'b1)) & (crop_coordinates_normed_V_data_0_V_0_state == 2'd3)) | ((crop_coordinates_normed_V_data_0_V_0_state == 2'd1) & (crop_coordinates_normed_V_data_0_V_0_ack_out == 1'b1)) | ((crop_coordinates_normed_V_data_0_V_0_state == 2'd2) & (crop_coordinates_normed_V_data_0_V_0_vld_in == 1'b1)))) begin
            crop_coordinates_normed_V_data_0_V_0_state <= 2'd3;
        end else begin
            crop_coordinates_normed_V_data_0_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_1_V_0_sel_rd <= 1'b0;
    end else begin
        if (((crop_coordinates_normed_V_data_1_V_0_ack_out == 1'b1) & (crop_coordinates_normed_V_data_1_V_0_vld_out == 1'b1))) begin
            crop_coordinates_normed_V_data_1_V_0_sel_rd <= ~crop_coordinates_normed_V_data_1_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_1_V_0_sel_wr <= 1'b0;
    end else begin
        if (((crop_coordinates_normed_V_data_1_V_0_ack_in == 1'b1) & (crop_coordinates_normed_V_data_1_V_0_vld_in == 1'b1))) begin
            crop_coordinates_normed_V_data_1_V_0_sel_wr <= ~crop_coordinates_normed_V_data_1_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_1_V_0_state <= 2'd0;
    end else begin
        if ((((crop_coordinates_normed_V_data_1_V_0_state == 2'd2) & (crop_coordinates_normed_V_data_1_V_0_vld_in == 1'b0)) | ((crop_coordinates_normed_V_data_1_V_0_state == 2'd3) & (crop_coordinates_normed_V_data_1_V_0_vld_in == 1'b0) & (crop_coordinates_normed_V_data_1_V_0_ack_out == 1'b1)))) begin
            crop_coordinates_normed_V_data_1_V_0_state <= 2'd2;
        end else if ((((crop_coordinates_normed_V_data_1_V_0_state == 2'd1) & (crop_coordinates_normed_V_data_1_V_0_ack_out == 1'b0)) | ((crop_coordinates_normed_V_data_1_V_0_state == 2'd3) & (crop_coordinates_normed_V_data_1_V_0_ack_out == 1'b0) & (crop_coordinates_normed_V_data_1_V_0_vld_in == 1'b1)))) begin
            crop_coordinates_normed_V_data_1_V_0_state <= 2'd1;
        end else if (((~((crop_coordinates_normed_V_data_1_V_0_vld_in == 1'b0) & (crop_coordinates_normed_V_data_1_V_0_ack_out == 1'b1)) & ~((crop_coordinates_normed_V_data_1_V_0_ack_out == 1'b0) & (crop_coordinates_normed_V_data_1_V_0_vld_in == 1'b1)) & (crop_coordinates_normed_V_data_1_V_0_state == 2'd3)) | ((crop_coordinates_normed_V_data_1_V_0_state == 2'd1) & (crop_coordinates_normed_V_data_1_V_0_ack_out == 1'b1)) | ((crop_coordinates_normed_V_data_1_V_0_state == 2'd2) & (crop_coordinates_normed_V_data_1_V_0_vld_in == 1'b1)))) begin
            crop_coordinates_normed_V_data_1_V_0_state <= 2'd3;
        end else begin
            crop_coordinates_normed_V_data_1_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_2_V_0_sel_rd <= 1'b0;
    end else begin
        if (((crop_coordinates_normed_V_data_2_V_0_ack_out == 1'b1) & (crop_coordinates_normed_V_data_2_V_0_vld_out == 1'b1))) begin
            crop_coordinates_normed_V_data_2_V_0_sel_rd <= ~crop_coordinates_normed_V_data_2_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_2_V_0_sel_wr <= 1'b0;
    end else begin
        if (((crop_coordinates_normed_V_data_2_V_0_ack_in == 1'b1) & (crop_coordinates_normed_V_data_2_V_0_vld_in == 1'b1))) begin
            crop_coordinates_normed_V_data_2_V_0_sel_wr <= ~crop_coordinates_normed_V_data_2_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_2_V_0_state <= 2'd0;
    end else begin
        if ((((crop_coordinates_normed_V_data_2_V_0_state == 2'd2) & (crop_coordinates_normed_V_data_2_V_0_vld_in == 1'b0)) | ((crop_coordinates_normed_V_data_2_V_0_state == 2'd3) & (crop_coordinates_normed_V_data_2_V_0_vld_in == 1'b0) & (crop_coordinates_normed_V_data_2_V_0_ack_out == 1'b1)))) begin
            crop_coordinates_normed_V_data_2_V_0_state <= 2'd2;
        end else if ((((crop_coordinates_normed_V_data_2_V_0_state == 2'd1) & (crop_coordinates_normed_V_data_2_V_0_ack_out == 1'b0)) | ((crop_coordinates_normed_V_data_2_V_0_state == 2'd3) & (crop_coordinates_normed_V_data_2_V_0_ack_out == 1'b0) & (crop_coordinates_normed_V_data_2_V_0_vld_in == 1'b1)))) begin
            crop_coordinates_normed_V_data_2_V_0_state <= 2'd1;
        end else if (((~((crop_coordinates_normed_V_data_2_V_0_vld_in == 1'b0) & (crop_coordinates_normed_V_data_2_V_0_ack_out == 1'b1)) & ~((crop_coordinates_normed_V_data_2_V_0_ack_out == 1'b0) & (crop_coordinates_normed_V_data_2_V_0_vld_in == 1'b1)) & (crop_coordinates_normed_V_data_2_V_0_state == 2'd3)) | ((crop_coordinates_normed_V_data_2_V_0_state == 2'd1) & (crop_coordinates_normed_V_data_2_V_0_ack_out == 1'b1)) | ((crop_coordinates_normed_V_data_2_V_0_state == 2'd2) & (crop_coordinates_normed_V_data_2_V_0_vld_in == 1'b1)))) begin
            crop_coordinates_normed_V_data_2_V_0_state <= 2'd3;
        end else begin
            crop_coordinates_normed_V_data_2_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_3_V_0_sel_rd <= 1'b0;
    end else begin
        if (((crop_coordinates_normed_V_data_3_V_0_ack_out == 1'b1) & (crop_coordinates_normed_V_data_3_V_0_vld_out == 1'b1))) begin
            crop_coordinates_normed_V_data_3_V_0_sel_rd <= ~crop_coordinates_normed_V_data_3_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_3_V_0_sel_wr <= 1'b0;
    end else begin
        if (((crop_coordinates_normed_V_data_3_V_0_ack_in == 1'b1) & (crop_coordinates_normed_V_data_3_V_0_vld_in == 1'b1))) begin
            crop_coordinates_normed_V_data_3_V_0_sel_wr <= ~crop_coordinates_normed_V_data_3_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        crop_coordinates_normed_V_data_3_V_0_state <= 2'd0;
    end else begin
        if ((((crop_coordinates_normed_V_data_3_V_0_state == 2'd2) & (crop_coordinates_normed_V_data_3_V_0_vld_in == 1'b0)) | ((crop_coordinates_normed_V_data_3_V_0_state == 2'd3) & (crop_coordinates_normed_V_data_3_V_0_vld_in == 1'b0) & (crop_coordinates_normed_V_data_3_V_0_ack_out == 1'b1)))) begin
            crop_coordinates_normed_V_data_3_V_0_state <= 2'd2;
        end else if ((((crop_coordinates_normed_V_data_3_V_0_state == 2'd1) & (crop_coordinates_normed_V_data_3_V_0_ack_out == 1'b0)) | ((crop_coordinates_normed_V_data_3_V_0_state == 2'd3) & (crop_coordinates_normed_V_data_3_V_0_ack_out == 1'b0) & (crop_coordinates_normed_V_data_3_V_0_vld_in == 1'b1)))) begin
            crop_coordinates_normed_V_data_3_V_0_state <= 2'd1;
        end else if (((~((crop_coordinates_normed_V_data_3_V_0_vld_in == 1'b0) & (crop_coordinates_normed_V_data_3_V_0_ack_out == 1'b1)) & ~((crop_coordinates_normed_V_data_3_V_0_ack_out == 1'b0) & (crop_coordinates_normed_V_data_3_V_0_vld_in == 1'b1)) & (crop_coordinates_normed_V_data_3_V_0_state == 2'd3)) | ((crop_coordinates_normed_V_data_3_V_0_state == 2'd1) & (crop_coordinates_normed_V_data_3_V_0_ack_out == 1'b1)) | ((crop_coordinates_normed_V_data_3_V_0_state == 2'd2) & (crop_coordinates_normed_V_data_3_V_0_vld_in == 1'b1)))) begin
            crop_coordinates_normed_V_data_3_V_0_state <= 2'd3;
        end else begin
            crop_coordinates_normed_V_data_3_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cropped_images_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((cropped_images_V_data_V_1_ack_out == 1'b1) & (cropped_images_V_data_V_1_vld_out == 1'b1))) begin
            cropped_images_V_data_V_1_sel_rd <= ~cropped_images_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cropped_images_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((cropped_images_V_data_V_1_ack_in == 1'b1) & (cropped_images_V_data_V_1_vld_in == 1'b1))) begin
            cropped_images_V_data_V_1_sel_wr <= ~cropped_images_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cropped_images_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((cropped_images_V_data_V_1_state == 2'd2) & (cropped_images_V_data_V_1_vld_in == 1'b0)) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_1_vld_in == 1'b0) & (cropped_images_V_data_V_1_ack_out == 1'b1)))) begin
            cropped_images_V_data_V_1_state <= 2'd2;
        end else if ((((cropped_images_V_data_V_1_state == 2'd1) & (cropped_images_V_data_V_TREADY == 1'b0)) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_TREADY == 1'b0) & (cropped_images_V_data_V_1_vld_in == 1'b1)))) begin
            cropped_images_V_data_V_1_state <= 2'd1;
        end else if (((~((cropped_images_V_data_V_1_vld_in == 1'b0) & (cropped_images_V_data_V_1_ack_out == 1'b1)) & ~((cropped_images_V_data_V_TREADY == 1'b0) & (cropped_images_V_data_V_1_vld_in == 1'b1)) & (cropped_images_V_data_V_1_state == 2'd3)) | ((cropped_images_V_data_V_1_state == 2'd1) & (cropped_images_V_data_V_1_ack_out == 1'b1)) | ((cropped_images_V_data_V_1_state == 2'd2) & (cropped_images_V_data_V_1_vld_in == 1'b1)))) begin
            cropped_images_V_data_V_1_state <= 2'd3;
        end else begin
            cropped_images_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        image_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((image_V_data_V_0_ack_out == 1'b1) & (image_V_data_V_0_vld_out == 1'b1))) begin
            image_V_data_V_0_sel_rd <= ~image_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        image_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((image_V_data_V_0_ack_in == 1'b1) & (image_V_data_V_0_vld_in == 1'b1))) begin
            image_V_data_V_0_sel_wr <= ~image_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        image_V_data_V_0_state <= 2'd0;
    end else begin
        if ((((image_V_data_V_0_state == 2'd2) & (image_V_data_V_0_vld_in == 1'b0)) | ((image_V_data_V_0_state == 2'd3) & (image_V_data_V_0_vld_in == 1'b0) & (image_V_data_V_0_ack_out == 1'b1)))) begin
            image_V_data_V_0_state <= 2'd2;
        end else if ((((image_V_data_V_0_state == 2'd1) & (image_V_data_V_0_ack_out == 1'b0)) | ((image_V_data_V_0_state == 2'd3) & (image_V_data_V_0_ack_out == 1'b0) & (image_V_data_V_0_vld_in == 1'b1)))) begin
            image_V_data_V_0_state <= 2'd1;
        end else if (((~((image_V_data_V_0_vld_in == 1'b0) & (image_V_data_V_0_ack_out == 1'b1)) & ~((image_V_data_V_0_ack_out == 1'b0) & (image_V_data_V_0_vld_in == 1'b1)) & (image_V_data_V_0_state == 2'd3)) | ((image_V_data_V_0_state == 2'd1) & (image_V_data_V_0_ack_out == 1'b1)) | ((image_V_data_V_0_state == 2'd2) & (image_V_data_V_0_vld_in == 1'b1)))) begin
            image_V_data_V_0_state <= 2'd3;
        end else begin
            image_V_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        box_idx7_0_reg_380 <= 2'd0;
    end else if ((~((1'b1 == ap_block_state7_io) | ((cropped_images_stream_1_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op186_read_state7 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op184_read_state7 == 1'b1))) & (icmp_ln90_fu_911_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        box_idx7_0_reg_380 <= box_idx_1_reg_1073;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        box_idx_0_reg_347 <= 2'd0;
    end else if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        box_idx_0_reg_347 <= box_idx_fu_419_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((cropped_images_V_data_V_1_state == 2'd1) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_TREADY == 1'b0))) & (icmp_ln89_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_0_reg_391 <= 9'd0;
    end else if (((cropped_images_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_0_reg_391 <= i_reg_1085;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((cropped_images_stream_1_V_data_0_V_full_n == 1'b0) & (ap_predicate_op164_write_state5 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_full_n == 1'b0) & (ap_predicate_op155_write_state5 == 1'b1)) | ((icmp_ln887_1_fu_813_p2 == 1'd0) & (image_V_data_V_0_vld_out == 1'b0))) & (icmp_ln887_1_fu_813_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        t_V_1_reg_369 <= src_col_V_fu_819_p2;
    end else if (((icmp_ln887_fu_765_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        t_V_1_reg_369 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_reg_358 <= 6'd0;
    end else if ((~(((cropped_images_stream_1_V_data_0_V_full_n == 1'b0) & (ap_predicate_op164_write_state5 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_full_n == 1'b0) & (ap_predicate_op155_write_state5 == 1'b1)) | ((icmp_ln887_1_fu_813_p2 == 1'd0) & (image_V_data_V_0_vld_out == 1'b0))) & (icmp_ln887_1_fu_813_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        t_V_reg_358 <= src_row_V_reg_1031;
    end
end

always @ (posedge ap_clk) begin
    if ((~((cropped_images_V_data_V_1_state == 2'd1) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state6))) begin
        box_idx_1_reg_1073 <= box_idx_1_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        crop_coordinates_local_0_V_load_1_reg_1008 <= crop_coordinates_local_0_V_q1;
        crop_coordinates_local_0_V_load_reg_988 <= crop_coordinates_local_0_V_q0;
        crop_coordinates_local_1_V_load_1_reg_1013 <= crop_coordinates_local_1_V_q1;
        crop_coordinates_local_1_V_load_reg_993 <= crop_coordinates_local_1_V_q0;
        crop_coordinates_local_2_V_load_1_reg_1018 <= crop_coordinates_local_2_V_q1;
        crop_coordinates_local_2_V_load_reg_998 <= crop_coordinates_local_2_V_q0;
        crop_coordinates_local_3_V_load_1_reg_1023 <= crop_coordinates_local_3_V_q1;
        crop_coordinates_local_3_V_load_reg_1003 <= crop_coordinates_local_3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((crop_coordinates_normed_V_data_0_V_0_load_A == 1'b1)) begin
        crop_coordinates_normed_V_data_0_V_0_payload_A <= crop_coordinates_normed_V_data_0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((crop_coordinates_normed_V_data_0_V_0_load_B == 1'b1)) begin
        crop_coordinates_normed_V_data_0_V_0_payload_B <= crop_coordinates_normed_V_data_0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((crop_coordinates_normed_V_data_1_V_0_load_A == 1'b1)) begin
        crop_coordinates_normed_V_data_1_V_0_payload_A <= crop_coordinates_normed_V_data_1_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((crop_coordinates_normed_V_data_1_V_0_load_B == 1'b1)) begin
        crop_coordinates_normed_V_data_1_V_0_payload_B <= crop_coordinates_normed_V_data_1_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((crop_coordinates_normed_V_data_2_V_0_load_A == 1'b1)) begin
        crop_coordinates_normed_V_data_2_V_0_payload_A <= crop_coordinates_normed_V_data_2_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((crop_coordinates_normed_V_data_2_V_0_load_B == 1'b1)) begin
        crop_coordinates_normed_V_data_2_V_0_payload_B <= crop_coordinates_normed_V_data_2_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((crop_coordinates_normed_V_data_3_V_0_load_A == 1'b1)) begin
        crop_coordinates_normed_V_data_3_V_0_payload_A <= crop_coordinates_normed_V_data_3_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((crop_coordinates_normed_V_data_3_V_0_load_B == 1'b1)) begin
        crop_coordinates_normed_V_data_3_V_0_payload_B <= crop_coordinates_normed_V_data_3_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((cropped_images_V_data_V_1_load_A == 1'b1)) begin
        cropped_images_V_data_V_1_payload_A <= zext_ln163_fu_923_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((cropped_images_V_data_V_1_load_B == 1'b1)) begin
        cropped_images_V_data_V_1_payload_B <= zext_ln163_fu_923_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state7_io) | ((cropped_images_stream_1_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op186_read_state7 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op184_read_state7 == 1'b1))) & (1'b1 == ap_CS_fsm_state7))) begin
        i_reg_1085 <= i_fu_917_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_765_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        icmp_ln79_2_reg_1046 <= icmp_ln79_2_fu_793_p2;
        icmp_ln79_reg_1036 <= icmp_ln79_fu_777_p2;
        xor_ln79_2_reg_1041 <= xor_ln79_2_fu_787_p2;
        xor_ln79_3_reg_1051 <= xor_ln79_3_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((image_V_data_V_0_load_A == 1'b1)) begin
        image_V_data_V_0_payload_A <= image_V_data_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((image_V_data_V_0_load_B == 1'b1)) begin
        image_V_data_V_0_payload_B <= image_V_data_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        src_row_V_reg_1031 <= src_row_V_fu_771_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((cropped_images_V_data_V_1_state == 2'd1) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_TREADY == 1'b0))) & (icmp_ln89_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        trunc_ln134_reg_1078 <= trunc_ln134_fu_907_p1;
    end
end

always @ (*) begin
    if ((~((cropped_images_V_data_V_1_state == 2'd1) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_TREADY == 1'b0))) & (icmp_ln89_fu_895_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln90_fu_911_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        if ((trunc_ln134_reg_1078 == 1'd0)) begin
            ap_phi_mux_tmp_data_0_V_4_phi_fu_405_p4 = cropped_images_stream_0_V_data_0_V_dout;
        end else if ((trunc_ln134_reg_1078 == 1'd1)) begin
            ap_phi_mux_tmp_data_0_V_4_phi_fu_405_p4 = cropped_images_stream_1_V_data_0_V_dout;
        end else begin
            ap_phi_mux_tmp_data_0_V_4_phi_fu_405_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_tmp_data_0_V_4_phi_fu_405_p4 = 'bx;
    end
end

always @ (*) begin
    if ((~((cropped_images_V_data_V_1_state == 2'd1) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_TREADY == 1'b0))) & (icmp_ln89_fu_895_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((icmp_ln46_fu_413_p2 == 1'd1)) begin
            crop_coordinates_local_0_V_address0 = 64'd0;
        end else if ((icmp_ln46_fu_413_p2 == 1'd0)) begin
            crop_coordinates_local_0_V_address0 = zext_ln48_fu_449_p1;
        end else begin
            crop_coordinates_local_0_V_address0 = 'bx;
        end
    end else begin
        crop_coordinates_local_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | (~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        crop_coordinates_local_0_V_ce0 = 1'b1;
    end else begin
        crop_coordinates_local_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_local_0_V_ce1 = 1'b1;
    end else begin
        crop_coordinates_local_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_local_0_V_we0 = 1'b1;
    end else begin
        crop_coordinates_local_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((icmp_ln46_fu_413_p2 == 1'd1)) begin
            crop_coordinates_local_1_V_address0 = 64'd0;
        end else if ((icmp_ln46_fu_413_p2 == 1'd0)) begin
            crop_coordinates_local_1_V_address0 = zext_ln48_fu_449_p1;
        end else begin
            crop_coordinates_local_1_V_address0 = 'bx;
        end
    end else begin
        crop_coordinates_local_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | (~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        crop_coordinates_local_1_V_ce0 = 1'b1;
    end else begin
        crop_coordinates_local_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_local_1_V_ce1 = 1'b1;
    end else begin
        crop_coordinates_local_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_local_1_V_we0 = 1'b1;
    end else begin
        crop_coordinates_local_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((icmp_ln46_fu_413_p2 == 1'd1)) begin
            crop_coordinates_local_2_V_address0 = 64'd0;
        end else if ((icmp_ln46_fu_413_p2 == 1'd0)) begin
            crop_coordinates_local_2_V_address0 = zext_ln48_fu_449_p1;
        end else begin
            crop_coordinates_local_2_V_address0 = 'bx;
        end
    end else begin
        crop_coordinates_local_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | (~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        crop_coordinates_local_2_V_ce0 = 1'b1;
    end else begin
        crop_coordinates_local_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_local_2_V_ce1 = 1'b1;
    end else begin
        crop_coordinates_local_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_local_2_V_we0 = 1'b1;
    end else begin
        crop_coordinates_local_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((icmp_ln46_fu_413_p2 == 1'd1)) begin
            crop_coordinates_local_3_V_address0 = 64'd0;
        end else if ((icmp_ln46_fu_413_p2 == 1'd0)) begin
            crop_coordinates_local_3_V_address0 = zext_ln48_fu_449_p1;
        end else begin
            crop_coordinates_local_3_V_address0 = 'bx;
        end
    end else begin
        crop_coordinates_local_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | (~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        crop_coordinates_local_3_V_ce0 = 1'b1;
    end else begin
        crop_coordinates_local_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_local_3_V_ce1 = 1'b1;
    end else begin
        crop_coordinates_local_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_local_3_V_we0 = 1'b1;
    end else begin
        crop_coordinates_local_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_normed_V_data_0_V_0_ack_out = 1'b1;
    end else begin
        crop_coordinates_normed_V_data_0_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((crop_coordinates_normed_V_data_0_V_0_sel == 1'b1)) begin
        crop_coordinates_normed_V_data_0_V_0_data_out = crop_coordinates_normed_V_data_0_V_0_payload_B;
    end else begin
        crop_coordinates_normed_V_data_0_V_0_data_out = crop_coordinates_normed_V_data_0_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_normed_V_data_0_V_TDATA_blk_n = crop_coordinates_normed_V_data_0_V_0_state[1'd0];
    end else begin
        crop_coordinates_normed_V_data_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_normed_V_data_1_V_0_ack_out = 1'b1;
    end else begin
        crop_coordinates_normed_V_data_1_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((crop_coordinates_normed_V_data_1_V_0_sel == 1'b1)) begin
        crop_coordinates_normed_V_data_1_V_0_data_out = crop_coordinates_normed_V_data_1_V_0_payload_B;
    end else begin
        crop_coordinates_normed_V_data_1_V_0_data_out = crop_coordinates_normed_V_data_1_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_normed_V_data_1_V_TDATA_blk_n = crop_coordinates_normed_V_data_1_V_0_state[1'd0];
    end else begin
        crop_coordinates_normed_V_data_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_normed_V_data_2_V_0_ack_out = 1'b1;
    end else begin
        crop_coordinates_normed_V_data_2_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((crop_coordinates_normed_V_data_2_V_0_sel == 1'b1)) begin
        crop_coordinates_normed_V_data_2_V_0_data_out = crop_coordinates_normed_V_data_2_V_0_payload_B;
    end else begin
        crop_coordinates_normed_V_data_2_V_0_data_out = crop_coordinates_normed_V_data_2_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_normed_V_data_2_V_TDATA_blk_n = crop_coordinates_normed_V_data_2_V_0_state[1'd0];
    end else begin
        crop_coordinates_normed_V_data_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_normed_V_data_3_V_0_ack_out = 1'b1;
    end else begin
        crop_coordinates_normed_V_data_3_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((crop_coordinates_normed_V_data_3_V_0_sel == 1'b1)) begin
        crop_coordinates_normed_V_data_3_V_0_data_out = crop_coordinates_normed_V_data_3_V_0_payload_B;
    end else begin
        crop_coordinates_normed_V_data_3_V_0_data_out = crop_coordinates_normed_V_data_3_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        crop_coordinates_normed_V_data_3_V_TDATA_blk_n = crop_coordinates_normed_V_data_3_V_0_state[1'd0];
    end else begin
        crop_coordinates_normed_V_data_3_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((cropped_images_V_data_V_1_sel == 1'b1)) begin
        cropped_images_V_data_V_1_data_out = cropped_images_V_data_V_1_payload_B;
    end else begin
        cropped_images_V_data_V_1_data_out = cropped_images_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state7_io) | ((cropped_images_stream_1_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op186_read_state7 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op184_read_state7 == 1'b1))) & (icmp_ln90_fu_911_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        cropped_images_V_data_V_1_vld_in = 1'b1;
    end else begin
        cropped_images_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((icmp_ln90_fu_911_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        cropped_images_V_data_V_TDATA_blk_n = cropped_images_V_data_V_1_state[1'd1];
    end else begin
        cropped_images_V_data_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state7_io) | ((cropped_images_stream_1_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op186_read_state7 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op184_read_state7 == 1'b1))) & (ap_predicate_op184_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        cropped_images_stream_0_V_data_0_V_read = 1'b1;
    end else begin
        cropped_images_stream_0_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((cropped_images_stream_1_V_data_0_V_full_n == 1'b0) & (ap_predicate_op164_write_state5 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_full_n == 1'b0) & (ap_predicate_op155_write_state5 == 1'b1)) | ((icmp_ln887_1_fu_813_p2 == 1'd0) & (image_V_data_V_0_vld_out == 1'b0))) & (ap_predicate_op155_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        cropped_images_stream_0_V_data_0_V_write = 1'b1;
    end else begin
        cropped_images_stream_0_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state7_io) | ((cropped_images_stream_1_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op186_read_state7 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op184_read_state7 == 1'b1))) & (ap_predicate_op186_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        cropped_images_stream_1_V_data_0_V_read = 1'b1;
    end else begin
        cropped_images_stream_1_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((cropped_images_stream_1_V_data_0_V_full_n == 1'b0) & (ap_predicate_op164_write_state5 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_full_n == 1'b0) & (ap_predicate_op155_write_state5 == 1'b1)) | ((icmp_ln887_1_fu_813_p2 == 1'd0) & (image_V_data_V_0_vld_out == 1'b0))) & (ap_predicate_op164_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        cropped_images_stream_1_V_data_0_V_write = 1'b1;
    end else begin
        cropped_images_stream_1_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((cropped_images_stream_1_V_data_0_V_full_n == 1'b0) & (ap_predicate_op164_write_state5 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_full_n == 1'b0) & (ap_predicate_op155_write_state5 == 1'b1)) | ((icmp_ln887_1_fu_813_p2 == 1'd0) & (image_V_data_V_0_vld_out == 1'b0))) & (icmp_ln887_1_fu_813_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        image_V_data_V_0_ack_out = 1'b1;
    end else begin
        image_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((image_V_data_V_0_sel == 1'b1)) begin
        image_V_data_V_0_data_out = image_V_data_V_0_payload_B;
    end else begin
        image_V_data_V_0_data_out = image_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln887_1_fu_813_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        image_V_data_V_TDATA_blk_n = image_V_data_V_0_state[1'd0];
    end else begin
        image_V_data_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0)) & (icmp_ln46_fu_413_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln887_fu_765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~(((cropped_images_stream_1_V_data_0_V_full_n == 1'b0) & (ap_predicate_op164_write_state5 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_full_n == 1'b0) & (ap_predicate_op155_write_state5 == 1'b1)) | ((icmp_ln887_1_fu_813_p2 == 1'd0) & (image_V_data_V_0_vld_out == 1'b0))) & (icmp_ln887_1_fu_813_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~(((cropped_images_stream_1_V_data_0_V_full_n == 1'b0) & (ap_predicate_op164_write_state5 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_full_n == 1'b0) & (ap_predicate_op155_write_state5 == 1'b1)) | ((icmp_ln887_1_fu_813_p2 == 1'd0) & (image_V_data_V_0_vld_out == 1'b0))) & (icmp_ln887_1_fu_813_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((cropped_images_V_data_V_1_state == 2'd1) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_TREADY == 1'b0))) & (icmp_ln89_fu_895_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((cropped_images_V_data_V_1_state == 2'd1) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_TREADY == 1'b0))) & (icmp_ln89_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((1'b1 == ap_block_state7_io) | ((cropped_images_stream_1_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op186_read_state7 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op184_read_state7 == 1'b1))) & (icmp_ln90_fu_911_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if ((~((1'b1 == ap_block_state7_io) | ((cropped_images_stream_1_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op186_read_state7 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op184_read_state7 == 1'b1))) & (icmp_ln90_fu_911_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((cropped_images_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln79_1_fu_889_p2 = (xor_ln79_1_fu_878_p2 & icmp_ln887_3_fu_884_p2);

assign and_ln79_fu_857_p2 = (xor_ln79_fu_846_p2 & icmp_ln887_2_fu_852_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((icmp_ln46_fu_413_p2 == 1'd0) & (io_acc_block_signal_op31 == 1'b0));
end

always @ (*) begin
    ap_block_state5 = (((cropped_images_stream_1_V_data_0_V_full_n == 1'b0) & (ap_predicate_op164_write_state5 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_full_n == 1'b0) & (ap_predicate_op155_write_state5 == 1'b1)) | ((icmp_ln887_1_fu_813_p2 == 1'd0) & (image_V_data_V_0_vld_out == 1'b0)));
end

always @ (*) begin
    ap_block_state6 = ((cropped_images_V_data_V_1_state == 2'd1) | ((cropped_images_V_data_V_1_state == 2'd3) & (cropped_images_V_data_V_TREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state7 = (((cropped_images_stream_1_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op186_read_state7 == 1'b1)) | ((cropped_images_stream_0_V_data_0_V_empty_n == 1'b0) & (ap_predicate_op184_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_state7_io = ((icmp_ln90_fu_911_p2 == 1'd0) & (cropped_images_V_data_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_predicate_op155_write_state5 = ((1'd1 == and_ln79_fu_857_p2) & (icmp_ln887_1_fu_813_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_write_state5 = ((1'd1 == and_ln79_1_fu_889_p2) & (icmp_ln887_1_fu_813_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op184_read_state7 = ((trunc_ln134_reg_1078 == 1'd0) & (icmp_ln90_fu_911_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op186_read_state7 = ((trunc_ln134_reg_1078 == 1'd1) & (icmp_ln90_fu_911_p2 == 1'd0));
end

assign box_idx_1_fu_901_p2 = (box_idx7_0_reg_380 + 2'd1);

assign box_idx_fu_419_p2 = (box_idx_0_reg_347 + 2'd1);

assign crop_coordinates_local_0_V_address1 = 64'd1;

assign crop_coordinates_local_0_V_d0 = ((p_Result_s_fu_481_p3[0:0] === 1'b1) ? select_ln851_fu_505_p3 : sext_ln835_fu_477_p1);

assign crop_coordinates_local_1_V_address1 = 64'd1;

assign crop_coordinates_local_1_V_d0 = ((p_Result_1_fu_568_p3[0:0] === 1'b1) ? select_ln851_1_fu_592_p3 : sext_ln835_1_fu_564_p1);

assign crop_coordinates_local_2_V_address1 = 64'd1;

assign crop_coordinates_local_2_V_d0 = ((p_Result_2_fu_633_p3[0:0] === 1'b1) ? select_ln851_2_fu_657_p3 : sext_ln835_2_fu_629_p1);

assign crop_coordinates_local_3_V_address1 = 64'd1;

assign crop_coordinates_local_3_V_d0 = ((p_Result_3_fu_720_p3[0:0] === 1'b1) ? select_ln851_3_fu_744_p3 : sext_ln835_3_fu_716_p1);

assign crop_coordinates_normed_V_data_0_V_0_ack_in = crop_coordinates_normed_V_data_0_V_0_state[1'd1];

assign crop_coordinates_normed_V_data_0_V_0_load_A = (~crop_coordinates_normed_V_data_0_V_0_sel_wr & crop_coordinates_normed_V_data_0_V_0_state_cmp_full);

assign crop_coordinates_normed_V_data_0_V_0_load_B = (crop_coordinates_normed_V_data_0_V_0_state_cmp_full & crop_coordinates_normed_V_data_0_V_0_sel_wr);

assign crop_coordinates_normed_V_data_0_V_0_sel = crop_coordinates_normed_V_data_0_V_0_sel_rd;

assign crop_coordinates_normed_V_data_0_V_0_state_cmp_full = ((crop_coordinates_normed_V_data_0_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign crop_coordinates_normed_V_data_0_V_0_vld_in = crop_coordinates_normed_V_data_0_V_TVALID;

assign crop_coordinates_normed_V_data_0_V_0_vld_out = crop_coordinates_normed_V_data_0_V_0_state[1'd0];

assign crop_coordinates_normed_V_data_0_V_TREADY = crop_coordinates_normed_V_data_0_V_0_state[1'd1];

assign crop_coordinates_normed_V_data_1_V_0_ack_in = crop_coordinates_normed_V_data_1_V_0_state[1'd1];

assign crop_coordinates_normed_V_data_1_V_0_load_A = (~crop_coordinates_normed_V_data_1_V_0_sel_wr & crop_coordinates_normed_V_data_1_V_0_state_cmp_full);

assign crop_coordinates_normed_V_data_1_V_0_load_B = (crop_coordinates_normed_V_data_1_V_0_state_cmp_full & crop_coordinates_normed_V_data_1_V_0_sel_wr);

assign crop_coordinates_normed_V_data_1_V_0_sel = crop_coordinates_normed_V_data_1_V_0_sel_rd;

assign crop_coordinates_normed_V_data_1_V_0_state_cmp_full = ((crop_coordinates_normed_V_data_1_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign crop_coordinates_normed_V_data_1_V_0_vld_in = crop_coordinates_normed_V_data_1_V_TVALID;

assign crop_coordinates_normed_V_data_1_V_0_vld_out = crop_coordinates_normed_V_data_1_V_0_state[1'd0];

assign crop_coordinates_normed_V_data_1_V_TREADY = crop_coordinates_normed_V_data_1_V_0_state[1'd1];

assign crop_coordinates_normed_V_data_2_V_0_ack_in = crop_coordinates_normed_V_data_2_V_0_state[1'd1];

assign crop_coordinates_normed_V_data_2_V_0_load_A = (~crop_coordinates_normed_V_data_2_V_0_sel_wr & crop_coordinates_normed_V_data_2_V_0_state_cmp_full);

assign crop_coordinates_normed_V_data_2_V_0_load_B = (crop_coordinates_normed_V_data_2_V_0_state_cmp_full & crop_coordinates_normed_V_data_2_V_0_sel_wr);

assign crop_coordinates_normed_V_data_2_V_0_sel = crop_coordinates_normed_V_data_2_V_0_sel_rd;

assign crop_coordinates_normed_V_data_2_V_0_state_cmp_full = ((crop_coordinates_normed_V_data_2_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign crop_coordinates_normed_V_data_2_V_0_vld_in = crop_coordinates_normed_V_data_2_V_TVALID;

assign crop_coordinates_normed_V_data_2_V_0_vld_out = crop_coordinates_normed_V_data_2_V_0_state[1'd0];

assign crop_coordinates_normed_V_data_2_V_TREADY = crop_coordinates_normed_V_data_2_V_0_state[1'd1];

assign crop_coordinates_normed_V_data_3_V_0_ack_in = crop_coordinates_normed_V_data_3_V_0_state[1'd1];

assign crop_coordinates_normed_V_data_3_V_0_load_A = (~crop_coordinates_normed_V_data_3_V_0_sel_wr & crop_coordinates_normed_V_data_3_V_0_state_cmp_full);

assign crop_coordinates_normed_V_data_3_V_0_load_B = (crop_coordinates_normed_V_data_3_V_0_state_cmp_full & crop_coordinates_normed_V_data_3_V_0_sel_wr);

assign crop_coordinates_normed_V_data_3_V_0_sel = crop_coordinates_normed_V_data_3_V_0_sel_rd;

assign crop_coordinates_normed_V_data_3_V_0_state_cmp_full = ((crop_coordinates_normed_V_data_3_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign crop_coordinates_normed_V_data_3_V_0_vld_in = crop_coordinates_normed_V_data_3_V_TVALID;

assign crop_coordinates_normed_V_data_3_V_0_vld_out = crop_coordinates_normed_V_data_3_V_0_state[1'd0];

assign crop_coordinates_normed_V_data_3_V_TREADY = crop_coordinates_normed_V_data_3_V_0_state[1'd1];

assign cropped_images_V_data_V_1_ack_in = cropped_images_V_data_V_1_state[1'd1];

assign cropped_images_V_data_V_1_ack_out = cropped_images_V_data_V_TREADY;

assign cropped_images_V_data_V_1_load_A = (~cropped_images_V_data_V_1_sel_wr & cropped_images_V_data_V_1_state_cmp_full);

assign cropped_images_V_data_V_1_load_B = (cropped_images_V_data_V_1_state_cmp_full & cropped_images_V_data_V_1_sel_wr);

assign cropped_images_V_data_V_1_sel = cropped_images_V_data_V_1_sel_rd;

assign cropped_images_V_data_V_1_state_cmp_full = ((cropped_images_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign cropped_images_V_data_V_1_vld_out = cropped_images_V_data_V_1_state[1'd0];

assign cropped_images_V_data_V_TDATA = cropped_images_V_data_V_1_data_out;

assign cropped_images_V_data_V_TVALID = cropped_images_V_data_V_1_state[1'd0];

assign i_fu_917_p2 = (i_0_reg_391 + 9'd1);

assign icmp_ln46_fu_413_p2 = ((box_idx_0_reg_347 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln79_1_fu_782_p2 = ((zext_ln887_fu_761_p1 < crop_coordinates_local_2_V_load_reg_998) ? 1'b1 : 1'b0);

assign icmp_ln79_2_fu_793_p2 = ((zext_ln887_fu_761_p1 < crop_coordinates_local_0_V_load_1_reg_1008) ? 1'b1 : 1'b0);

assign icmp_ln79_3_fu_798_p2 = ((zext_ln887_fu_761_p1 < crop_coordinates_local_2_V_load_1_reg_1018) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_777_p2 = ((zext_ln887_fu_761_p1 < crop_coordinates_local_0_V_load_reg_988) ? 1'b1 : 1'b0);

assign icmp_ln851_1_fu_580_p2 = ((trunc_ln851_1_fu_576_p1 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_2_fu_645_p2 = ((trunc_ln851_2_fu_641_p1 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_3_fu_732_p2 = ((trunc_ln851_3_fu_728_p1 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_493_p2 = ((trunc_ln851_fu_489_p1 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_1_fu_813_p2 = ((t_V_1_reg_369 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln887_2_fu_852_p2 = ((zext_ln887_1_fu_809_p1 < crop_coordinates_local_3_V_load_reg_1003) ? 1'b1 : 1'b0);

assign icmp_ln887_3_fu_884_p2 = ((zext_ln887_1_fu_809_p1 < crop_coordinates_local_3_V_load_1_reg_1023) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_765_p2 = ((t_V_reg_358 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln891_1_fu_863_p2 = ((zext_ln887_1_fu_809_p1 < crop_coordinates_local_1_V_load_1_reg_1013) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_831_p2 = ((zext_ln887_1_fu_809_p1 < crop_coordinates_local_1_V_load_reg_993) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_895_p2 = ((box_idx7_0_reg_380 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_911_p2 = ((i_0_reg_391 == 9'd400) ? 1'b1 : 1'b0);

assign image_V_data_V_0_ack_in = image_V_data_V_0_state[1'd1];

assign image_V_data_V_0_load_A = (image_V_data_V_0_state_cmp_full & ~image_V_data_V_0_sel_wr);

assign image_V_data_V_0_load_B = (image_V_data_V_0_state_cmp_full & image_V_data_V_0_sel_wr);

assign image_V_data_V_0_sel = image_V_data_V_0_sel_rd;

assign image_V_data_V_0_state_cmp_full = ((image_V_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign image_V_data_V_0_vld_in = image_V_data_V_TVALID;

assign image_V_data_V_0_vld_out = image_V_data_V_0_state[1'd0];

assign image_V_data_V_TREADY = image_V_data_V_0_state[1'd1];

assign io_acc_block_signal_op31 = (crop_coordinates_normed_V_data_3_V_0_vld_out & crop_coordinates_normed_V_data_2_V_0_vld_out & crop_coordinates_normed_V_data_1_V_0_vld_out & crop_coordinates_normed_V_data_0_V_0_vld_out);

assign or_ln79_1_fu_841_p2 = (xor_ln79_2_reg_1041 | or_ln79_fu_836_p2);

assign or_ln79_2_fu_868_p2 = (icmp_ln891_1_fu_863_p2 | icmp_ln79_2_reg_1046);

assign or_ln79_3_fu_873_p2 = (xor_ln79_3_reg_1051 | or_ln79_2_fu_868_p2);

assign or_ln79_fu_836_p2 = (icmp_ln891_fu_831_p2 | icmp_ln79_reg_1036);

assign p_Result_1_fu_568_p3 = r_V_1_fu_548_p2[32'd16];

assign p_Result_2_fu_633_p3 = r_V_2_fu_613_p2[32'd15];

assign p_Result_3_fu_720_p3 = r_V_3_fu_700_p2[32'd16];

assign p_Result_s_fu_481_p3 = r_V_fu_461_p2[32'd15];

assign r_V_1_fu_548_p2 = ($signed(sext_ln1118_1_fu_544_p1) + $signed(sext_ln1118_fu_532_p1));

assign r_V_2_fu_613_p1 = tmp_data_2_V_fu_441_p1;

assign r_V_2_fu_613_p2 = ($signed({{1'b0}, {17'd50}}) * $signed(r_V_2_fu_613_p1));

assign r_V_3_fu_700_p2 = ($signed(sext_ln1118_3_fu_696_p1) + $signed(sext_ln1118_2_fu_684_p1));

assign r_V_fu_461_p1 = tmp_data_0_V_fu_445_p1;

assign r_V_fu_461_p2 = ($signed({{1'b0}, {17'd50}}) * $signed(r_V_fu_461_p1));

assign ret_V_1_fu_586_p2 = ($signed(10'd1) + $signed(sext_ln835_1_fu_564_p1));

assign ret_V_2_fu_651_p2 = ($signed(10'd1) + $signed(sext_ln835_2_fu_629_p1));

assign ret_V_3_fu_738_p2 = ($signed(10'd1) + $signed(sext_ln835_3_fu_716_p1));

assign ret_V_fu_499_p2 = ($signed(10'd1) + $signed(sext_ln835_fu_477_p1));

assign select_ln851_1_fu_592_p3 = ((icmp_ln851_1_fu_580_p2[0:0] === 1'b1) ? sext_ln835_1_fu_564_p1 : ret_V_1_fu_586_p2);

assign select_ln851_2_fu_657_p3 = ((icmp_ln851_2_fu_645_p2[0:0] === 1'b1) ? sext_ln835_2_fu_629_p1 : ret_V_2_fu_651_p2);

assign select_ln851_3_fu_744_p3 = ((icmp_ln851_3_fu_732_p2[0:0] === 1'b1) ? sext_ln835_3_fu_716_p1 : ret_V_3_fu_738_p2);

assign select_ln851_fu_505_p3 = ((icmp_ln851_fu_493_p2[0:0] === 1'b1) ? sext_ln835_fu_477_p1 : ret_V_fu_499_p2);

assign sext_ln1118_1_fu_544_p1 = $signed(shl_ln1118_1_fu_536_p3);

assign sext_ln1118_2_fu_684_p1 = $signed(shl_ln1118_2_fu_678_p2);

assign sext_ln1118_3_fu_696_p1 = $signed(shl_ln1118_3_fu_688_p3);

assign sext_ln1118_fu_532_p1 = $signed(shl_ln1118_fu_526_p2);

assign sext_ln835_1_fu_564_p1 = $signed(tmp_3_fu_554_p4);

assign sext_ln835_2_fu_629_p1 = $signed(tmp_4_fu_619_p4);

assign sext_ln835_3_fu_716_p1 = $signed(tmp_5_fu_706_p4);

assign sext_ln835_fu_477_p1 = $signed(tmp_2_fu_467_p4);

assign shl_ln1118_1_fu_536_p3 = {{trunc_ln1118_fu_522_p1}, {4'd0}};

assign shl_ln1118_2_fu_678_p2 = crop_coordinates_normed_V_data_3_V_0_data_out << 16'd6;

assign shl_ln1118_3_fu_688_p3 = {{trunc_ln1118_1_fu_674_p1}, {4'd0}};

assign shl_ln1118_fu_526_p2 = crop_coordinates_normed_V_data_1_V_0_data_out << 16'd6;

assign src_col_V_fu_819_p2 = (t_V_1_reg_369 + 7'd1);

assign src_row_V_fu_771_p2 = (t_V_reg_358 + 6'd1);

assign tmp_2_fu_467_p4 = {{r_V_fu_461_p2[16:8]}};

assign tmp_3_fu_554_p4 = {{r_V_1_fu_548_p2[16:8]}};

assign tmp_4_fu_619_p4 = {{r_V_2_fu_613_p2[16:8]}};

assign tmp_5_fu_706_p4 = {{r_V_3_fu_700_p2[16:8]}};

assign tmp_data_0_V_1_fu_825_p1 = image_V_data_V_0_data_out[9:0];

assign tmp_data_0_V_fu_445_p1 = crop_coordinates_normed_V_data_0_V_0_data_out[9:0];

assign tmp_data_2_V_fu_441_p1 = crop_coordinates_normed_V_data_2_V_0_data_out[9:0];

assign trunc_ln1118_1_fu_674_p1 = crop_coordinates_normed_V_data_3_V_0_data_out[9:0];

assign trunc_ln1118_fu_522_p1 = crop_coordinates_normed_V_data_1_V_0_data_out[9:0];

assign trunc_ln134_fu_907_p1 = box_idx7_0_reg_380[0:0];

assign trunc_ln851_1_fu_576_p1 = r_V_1_fu_548_p2[7:0];

assign trunc_ln851_2_fu_641_p1 = r_V_2_fu_613_p2[7:0];

assign trunc_ln851_3_fu_728_p1 = r_V_3_fu_700_p2[7:0];

assign trunc_ln851_fu_489_p1 = r_V_fu_461_p2[7:0];

assign xor_ln79_1_fu_878_p2 = (or_ln79_3_fu_873_p2 ^ 1'd1);

assign xor_ln79_2_fu_787_p2 = (icmp_ln79_1_fu_782_p2 ^ 1'd1);

assign xor_ln79_3_fu_803_p2 = (icmp_ln79_3_fu_798_p2 ^ 1'd1);

assign xor_ln79_fu_846_p2 = (or_ln79_1_fu_841_p2 ^ 1'd1);

assign zext_ln163_fu_923_p1 = ap_phi_mux_tmp_data_0_V_4_phi_fu_405_p4;

assign zext_ln48_fu_449_p1 = box_idx_0_reg_347;

assign zext_ln887_1_fu_809_p1 = t_V_1_reg_369;

assign zext_ln887_fu_761_p1 = t_V_reg_358;

endmodule //crop_array_array_ap_uint_12_array_ap_fixed_10_2_5_3_0_1u_config3_s
