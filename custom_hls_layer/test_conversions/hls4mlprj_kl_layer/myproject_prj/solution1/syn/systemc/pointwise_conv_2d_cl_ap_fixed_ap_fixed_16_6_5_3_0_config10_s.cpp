// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_ST_fsm_state1 = "1";
const sc_lv<3> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<32> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_boolean_1 = true;
const sc_lv<1> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_lv1_1 = "1";
const sc_lv<32> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_lv32_2 = "10";
const bool pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_boolean_0 = false;
const sc_lv<32> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_lv32_1 = "1";
const sc_lv<1> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_lv1_0 = "0";
const sc_lv<6> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_lv6_0 = "000000";
const sc_lv<6> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_lv6_38 = "111000";
const sc_lv<6> pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::ap_const_lv6_1 = "1";

pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_fill_buffer_1_fu_121 = new fill_buffer_1("grp_fill_buffer_1_fu_121");
    grp_fill_buffer_1_fu_121->ap_clk(ap_clk);
    grp_fill_buffer_1_fu_121->ap_rst(ap_rst);
    grp_fill_buffer_1_fu_121->data_V_read(ap_phi_reg_pp0_iter1_data_V_load_phi_reg_109);
    grp_fill_buffer_1_fu_121->p_read1(data_buf_V_0_0_06281_i1_fu_52);
    grp_fill_buffer_1_fu_121->partition(i_part_0_i_i2_reg_94);
    grp_fill_buffer_1_fu_121->ap_return(grp_fill_buffer_1_fu_121_ap_return);
    grp_fill_buffer_1_fu_121->ap_ce(grp_fill_buffer_1_fu_121_ap_ce);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001_ignoreCallOp20);
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( data_V_empty_n );
    sensitive << ( ap_phi_mux_do_init_phi_fu_67_p6 );

    SC_METHOD(thread_ap_block_pp0_stage1_11001_ignoreCallOp24);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( data_V_empty_n );
    sensitive << ( ap_phi_mux_do_init_phi_fu_67_p6 );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( data_V_empty_n );
    sensitive << ( ap_phi_mux_do_init_phi_fu_67_p6 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0_ignore_call4);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( data_V_empty_n );
    sensitive << ( ap_phi_mux_do_init_phi_fu_67_p6 );

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0_ignore_call4);
    sensitive << ( data_V_empty_n );
    sensitive << ( ap_phi_mux_do_init_phi_fu_67_p6 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1_ignore_call4);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter1_ignore_call4);

    SC_METHOD(thread_ap_condition_123);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_condition_51);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( icmp_ln36_reg_164 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0_reg );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_data_V_load_rewind_phi_fu_83_p6);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( data_V_load_rewind_reg_79 );
    sensitive << ( data_V_load_phi_reg_109 );
    sensitive << ( icmp_ln36_reg_164 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_do_init_phi_fu_67_p6);
    sensitive << ( do_init_reg_62 );
    sensitive << ( icmp_ln36_reg_164 );
    sensitive << ( ap_condition_123 );

    SC_METHOD(thread_ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6);
    sensitive << ( i_part_0_i_i2_reg_94 );
    sensitive << ( icmp_ln36_reg_164 );
    sensitive << ( i_part_reg_168 );
    sensitive << ( ap_condition_123 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_data_V_load_phi_reg_109);

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln36_fu_130_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_data_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( data_V_empty_n );
    sensitive << ( ap_phi_mux_do_init_phi_fu_67_p6 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_data_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_do_init_phi_fu_67_p6 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_grp_fill_buffer_1_fu_121_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001_ignoreCallOp20 );
    sensitive << ( ap_block_pp0_stage1_11001_ignoreCallOp24 );

    SC_METHOD(thread_i_part_fu_140_p2);
    sensitive << ( i_part_0_i_i2_reg_94 );

    SC_METHOD(thread_icmp_ln36_fu_130_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_dout, "(port)data_V_dout");
    sc_trace(mVcdFile, data_V_empty_n, "(port)data_V_empty_n");
    sc_trace(mVcdFile, data_V_read, "(port)data_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, icmp_ln36_fu_130_p2, "icmp_ln36_fu_130_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_phi_mux_do_init_phi_fu_67_p6, "ap_phi_mux_do_init_phi_fu_67_p6");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter1, "ap_block_state5_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, data_V_blk_n, "data_V_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, do_init_reg_62, "do_init_reg_62");
    sc_trace(mVcdFile, data_V_load_rewind_reg_79, "data_V_load_rewind_reg_79");
    sc_trace(mVcdFile, i_part_0_i_i2_reg_94, "i_part_0_i_i2_reg_94");
    sc_trace(mVcdFile, data_V_load_phi_reg_109, "data_V_load_phi_reg_109");
    sc_trace(mVcdFile, icmp_ln36_reg_164, "icmp_ln36_reg_164");
    sc_trace(mVcdFile, i_part_fu_140_p2, "i_part_fu_140_p2");
    sc_trace(mVcdFile, i_part_reg_168, "i_part_reg_168");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0_reg, "ap_enable_reg_pp0_iter0_reg");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, grp_fill_buffer_1_fu_121_ap_return, "grp_fill_buffer_1_fu_121_ap_return");
    sc_trace(mVcdFile, grp_fill_buffer_1_fu_121_ap_ce, "grp_fill_buffer_1_fu_121_ap_ce");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0_ignore_call4, "ap_block_state2_pp0_stage0_iter0_ignore_call4");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1_ignore_call4, "ap_block_state4_pp0_stage0_iter1_ignore_call4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001_ignoreCallOp20, "ap_block_pp0_stage0_11001_ignoreCallOp20");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0_ignore_call4, "ap_block_state3_pp0_stage1_iter0_ignore_call4");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter1_ignore_call4, "ap_block_state5_pp0_stage1_iter1_ignore_call4");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001_ignoreCallOp24, "ap_block_pp0_stage1_11001_ignoreCallOp24");
    sc_trace(mVcdFile, ap_phi_mux_data_V_load_rewind_phi_fu_83_p6, "ap_phi_mux_data_V_load_rewind_phi_fu_83_p6");
    sc_trace(mVcdFile, ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6, "ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_data_V_load_phi_reg_109, "ap_phi_reg_pp0_iter0_data_V_load_phi_reg_109");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_data_V_load_phi_reg_109, "ap_phi_reg_pp0_iter1_data_V_load_phi_reg_109");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, data_buf_V_0_0_06281_i1_fu_52, "data_buf_V_0_0_06281_i1_fu_52");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_123, "ap_condition_123");
    sc_trace(mVcdFile, ap_condition_51, "ap_condition_51");
#endif

    }
}

pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::~pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_fill_buffer_1_fu_121;
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln36_reg_164.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())) {
            ap_enable_reg_pp0_iter0_reg = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_51.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_phi_mux_do_init_phi_fu_67_p6.read(), ap_const_lv1_0)) {
            ap_phi_reg_pp0_iter1_data_V_load_phi_reg_109 = ap_phi_mux_data_V_load_rewind_phi_fu_83_p6.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_do_init_phi_fu_67_p6.read())) {
            ap_phi_reg_pp0_iter1_data_V_load_phi_reg_109 = data_V_dout.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_data_V_load_phi_reg_109 = ap_phi_reg_pp0_iter0_data_V_load_phi_reg_109.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln36_reg_164.read(), ap_const_lv1_0))) {
        do_init_reg_62 = ap_const_lv1_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln36_reg_164.read())))) {
        do_init_reg_62 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln36_reg_164.read(), ap_const_lv1_0))) {
        i_part_0_i_i2_reg_94 = i_part_reg_168.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln36_reg_164.read())))) {
        i_part_0_i_i2_reg_94 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_load_phi_reg_109 = ap_phi_reg_pp0_iter1_data_V_load_phi_reg_109.read();
        i_part_reg_168 = i_part_fu_140_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln36_reg_164.read(), ap_const_lv1_0))) {
        data_V_load_rewind_reg_79 = data_V_load_phi_reg_109.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        data_buf_V_0_0_06281_i1_fu_52 = grp_fill_buffer_1_fu_121_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        icmp_ln36_reg_164 = icmp_ln36_fu_130_p2.read();
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_pp0_stage0_11001_ignoreCallOp20() {
    ap_block_pp0_stage0_11001_ignoreCallOp20 = esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_do_init_phi_fu_67_p6.read()));
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_pp0_stage1_11001_ignoreCallOp24() {
    ap_block_pp0_stage1_11001_ignoreCallOp24 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_do_init_phi_fu_67_p6.read()));
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_do_init_phi_fu_67_p6.read()));
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_state2_pp0_stage0_iter0_ignore_call4() {
    ap_block_state2_pp0_stage0_iter0_ignore_call4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_do_init_phi_fu_67_p6.read()));
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_state3_pp0_stage1_iter0_ignore_call4() {
    ap_block_state3_pp0_stage1_iter0_ignore_call4 = (esl_seteq<1,1,1>(ap_const_logic_0, data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_do_init_phi_fu_67_p6.read()));
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_state4_pp0_stage0_iter1_ignore_call4() {
    ap_block_state4_pp0_stage0_iter1_ignore_call4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_state5_pp0_stage1_iter1() {
    ap_block_state5_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_block_state5_pp0_stage1_iter1_ignore_call4() {
    ap_block_state5_pp0_stage1_iter1_ignore_call4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_condition_123() {
    ap_condition_123 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()));
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_condition_51() {
    ap_condition_51 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0));
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln36_reg_164.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_enable_reg_pp0_iter0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())) {
        ap_enable_reg_pp0_iter0 = ap_start.read();
    } else {
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg.read();
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_phi_mux_data_V_load_rewind_phi_fu_83_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln36_reg_164.read(), ap_const_lv1_0))) {
        ap_phi_mux_data_V_load_rewind_phi_fu_83_p6 = data_V_load_phi_reg_109.read();
    } else {
        ap_phi_mux_data_V_load_rewind_phi_fu_83_p6 = data_V_load_rewind_reg_79.read();
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_phi_mux_do_init_phi_fu_67_p6() {
    if (esl_seteq<1,1,1>(ap_condition_123.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln36_reg_164.read())) {
            ap_phi_mux_do_init_phi_fu_67_p6 = ap_const_lv1_1;
        } else if (esl_seteq<1,1,1>(icmp_ln36_reg_164.read(), ap_const_lv1_0)) {
            ap_phi_mux_do_init_phi_fu_67_p6 = ap_const_lv1_0;
        } else {
            ap_phi_mux_do_init_phi_fu_67_p6 = do_init_reg_62.read();
        }
    } else {
        ap_phi_mux_do_init_phi_fu_67_p6 = do_init_reg_62.read();
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6() {
    if (esl_seteq<1,1,1>(ap_condition_123.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln36_reg_164.read())) {
            ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6 = ap_const_lv6_0;
        } else if (esl_seteq<1,1,1>(icmp_ln36_reg_164.read(), ap_const_lv1_0)) {
            ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6 = i_part_reg_168.read();
        } else {
            ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6 = i_part_0_i_i2_reg_94.read();
        }
    } else {
        ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6 = i_part_0_i_i2_reg_94.read();
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_phi_reg_pp0_iter0_data_V_load_phi_reg_109() {
    ap_phi_reg_pp0_iter0_data_V_load_phi_reg_109 =  (sc_lv<912>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(icmp_ln36_fu_130_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_do_init_phi_fu_67_p6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        data_V_blk_n = data_V_empty_n.read();
    } else {
        data_V_blk_n = ap_const_logic_1;
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_data_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_do_init_phi_fu_67_p6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        data_V_read = ap_const_logic_1;
    } else {
        data_V_read = ap_const_logic_0;
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_grp_fill_buffer_1_fu_121_ap_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001_ignoreCallOp20.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001_ignoreCallOp24.read(), ap_const_boolean_0)))) {
        grp_fill_buffer_1_fu_121_ap_ce = ap_const_logic_1;
    } else {
        grp_fill_buffer_1_fu_121_ap_ce = ap_const_logic_0;
    }
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_i_part_fu_140_p2() {
    i_part_fu_140_p2 = (!i_part_0_i_i2_reg_94.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_part_0_i_i2_reg_94.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_icmp_ln36_fu_130_p2() {
    icmp_ln36_fu_130_p2 = (!ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6.read().is_01() || !ap_const_lv6_38.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_part_0_i_i2_phi_fu_98_p6.read() == ap_const_lv6_38);
}

void pointwise_conv_2d_cl_ap_fixed_ap_fixed_16_6_5_3_0_config10_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reset_idle_pp0.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

